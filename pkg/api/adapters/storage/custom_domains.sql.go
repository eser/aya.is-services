// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: custom_domains.sql

package storage

import (
	"context"
	"database/sql"
	"errors"
	"github.com/eser/aya.is-services/pkg/api/business/custom_domains"
)

const getCustomDomainByDomain = `-- name: GetCustomDomainByDomain :one
SELECT cd.id, cd.domain, cd.profile_id, cd.created_at, cd.updated_at, cd.deleted_at,
  p.slug AS "profile_slug"
FROM "custom_domain" cd
  INNER JOIN "profile" p ON cd.profile_id = p.id
  AND p.deleted_at IS NULL
WHERE cd.domain = $1
  AND cd.deleted_at IS NULL
LIMIT 1
`

// GetCustomDomainByDomain
//
//	SELECT cd.id, cd.domain, cd.profile_id, cd.created_at, cd.updated_at, cd.deleted_at,
//	  p.slug AS "profile_slug"
//	FROM "custom_domain" cd
//	  INNER JOIN "profile" p ON cd.profile_id = p.id
//	  AND p.deleted_at IS NULL
//	WHERE cd.domain = $1
//	  AND cd.deleted_at IS NULL
//	LIMIT 1
func (q *Queries) GetCustomDomainByDomain(ctx context.Context, domain string) (*custom_domains.GetCustomDomainByDomainRow, error) {
	row := q.db.QueryRowContext(ctx, getCustomDomainByDomain, domain)
	var i custom_domains.GetCustomDomainByDomainRow
	err := row.Scan(
		&i.Id,
		&i.Domain,
		&i.ProfileId,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
		&i.ProfileSlug,
	)
	if err != nil && errors.Is(err, sql.ErrNoRows) {
		return nil, nil
	}
	return &i, err
}
